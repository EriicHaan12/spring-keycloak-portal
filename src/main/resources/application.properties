### server port
server.port=8081
spring.application.name=Spring 3 and Keycloak

## logging
logging.level.org.springframework.security=INFO
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

## keycloak (office)
spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8080/realms/external

spring.security.oauth2.client.registration.external.provider=external
spring.security.oauth2.client.registration.external.client-name=external-client
spring.security.oauth2.client.registration.external.client-id=external-client
spring.security.oauth2.client.registration.external.client-secret=cF3MZn0kH79BKDJu9rAf2jhy0Gzsr415
spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code

## keycloak (home)
#spring.security.oauth2.client.provider.external.issuer-uri=http://localhost:8080/realms/external
#
#spring.security.oauth2.client.registration.external.provider=external
#spring.security.oauth2.client.registration.external.client-name=external-client
#spring.security.oauth2.client.registration.external.client-id=external-client
#spring.security.oauth2.client.registration.external.client-secret=P5RqOALzM0n4JNgMCfORUewtajmSTKP0
#spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
#spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code

## keycloak / spring security connect
keycloak.realm=external
keycloak.resource=external-client
keycloak.auth-server-url=https://localhost:8080/auth
keycloak.ssl-required=external
keycloak.public-client=true
keycloak.use-resource-role-mappings=true
keycloak.principal-attribute=preferred_username
